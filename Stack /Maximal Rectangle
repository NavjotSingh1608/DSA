class Solution {
public:

    vector<int> pse(vector<int> v){
        int n = v.size();
        stack<int> st;
        vector<int> arr(n,-1);
        for(int i=0;i<n;i++){
            while(!st.empty() && v[st.top()] >= v[i] ){
                st.pop();
            }

            if(!st.empty()){
                arr[i] = st.top();
            }
            st.push(i);
        }

        return arr;
    }

    vector<int> nse(vector<int> v){
        int n = v.size();
        stack<int> st;
        vector<int> arr(n,n);
        for(int i=n-1;i>=0;i--){
            while(!st.empty() && v[st.top()] >= v[i] ){
                st.pop();
            }

            if(!st.empty()){
                arr[i] = st.top();
            }
            st.push(i);
        }

        return arr;
    }

    int areaMax(vector<int> v, int m){
        vector<int> next = nse(v);
        vector<int> prev = pse(v);

        int total = 0;
        for(int i=0;i<m;i++){
            int h = v[i];
            int l = next[i]-prev[i]-1;
            total = max(total,h*l);
        }

        return total;
    }

    int maximalRectangle(vector<vector<char>>& matrix) {
        int n = matrix.size(), m = matrix[0].size();
        vector<vector<int>> v(n,vector<int> (m,0));

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                v[i][j] = matrix[i][j]-'0';
            }
        }

        int area = areaMax(v[0],m);
        for(int i=1;i<n;i++){
            for(int j=0;j<m;j++){
                if(v[i][j] == 1){
                    v[i][j] += v[i-1][j];
                }else{
                    v[i][j] = 0;
                }
            }
            area = max(area,areaMax(v[i],m));
        }
        
        return area;
    }
};
