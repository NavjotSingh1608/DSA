class Node{
public:
    pair<int,int> p;
    Node * next;

    Node(){
        this->p = {0,0};
        this->next = NULL;
    }

    Node(int p1,int p2){
        this->p = {p1,p2};
        this->next = NULL;
    }

};

class MinStack {
    Node * head;
public:
    MinStack() {
        head = NULL;
    }
    
    void push(int val) {
        if(head == NULL){
            Node * temp = new Node(val,val);
            head = temp;
        }else{
            Node * temp = new Node(val,min(head->p.second,val));
            temp->next = head;
            head = temp;
        }
    }
    
    void pop() {
        if(head == NULL) return;
        head = head->next;
    }
    
    int top() {
        if(head == NULL) return -1;
        return head->p.first;
    }
    
    int getMin() {
            if(head == NULL) return -1;
            return head->p.second;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
