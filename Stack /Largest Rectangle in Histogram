class Solution {
public:

    vector<int> nse(vector<int> v){
        int n = v.size();
        vector<int> arr(n,n);
        stack<int> st;

        for(int i=n-1;i>=0;i--){
            while(!st.empty() && v[st.top()] >= v[i]){
                st.pop();
            }

            if(!st.empty()){
                arr[i] = st.top();
            }

            st.push(i);
        }

        return arr;

    }

    vector<int> pse(vector<int> v){
        int n = v.size();
        vector<int> arr(n,-1);
        stack<int> st;

        for(int i=0;i<n;i++){
            while(!st.empty() && v[st.top()] >= v[i]){
                st.pop();
            }

            if(!st.empty()){
                arr[i] = st.top();
            }

            st.push(i);
        }

        return arr;

    }

    int largestRectangleArea(vector<int>& heights) {
        vector<int> next = nse(heights);
        vector<int> prev = pse(heights);

        int total = 0, n = heights.size();
        for(int i=0;i<n;i++){
            int h = heights[i];
            int l = next[i]-prev[i]-1;
            total = max(total,h*l); 
        }

        return total;
    }
};
