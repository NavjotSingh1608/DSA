//{ Driver Code Starts
// Initial template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function template for C++

class Solution {
  public:
    // Function to find if there is a celebrity in the party or not.
    bool knows(int i, int j, vector<vector<int>> &mat){
        return mat[i][j];
    }
    
    int celebrity(vector<vector<int> >& mat) {
        // code here
        stack<int> st;
        for(int i=0;i<mat[0].size();i++){
            st.push(i);
        }
        
        while(st.size() != 1){
            int top1 = st.top();
            st.pop();
            int top2 = st.top();
            st.pop();
            
            if(knows(top1,top2,mat)){
                st.push(top2);
            }else{
                st.push(top1);
            }
        }
        
        int topi = st.top();
        for(int i=0;i<mat[0].size();i++){
            if(i != topi && (knows(topi,i,mat) || !knows(i,topi,mat))){
                return -1;
            }
        }
        
        return topi;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        vector<vector<int> > M(n, vector<int>(n, 0));
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                cin >> M[i][j];
            }
        }
        Solution ob;
        cout << ob.celebrity(M) << endl;
    }
}

// } Driver Code Ends
