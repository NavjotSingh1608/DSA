/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        int flag = 0;
        vector<int> v1,v2;
        if(head == nullptr || head->next == nullptr) return head;

        ListNode * temp = head;
        while(temp != nullptr){
            if(flag == 0){
                v1.push_back(temp->val);
                flag = 1;
            }else{
                v2.push_back(temp->val);
                flag = 0;
            }
            temp = temp->next;
        }

        ListNode * curr = new ListNode(v1[0]);
        ListNode * tail = curr;
        for(int i=1;i<v1.size();i++){
            ListNode * t = new ListNode(v1[i]);
            tail->next = t;
            tail = t;
        }

        for(int i=0;i<v2.size();i++){
            ListNode * t = new ListNode(v2[i]);
            tail->next = t;
            tail = t;
        }

        return curr;

    }
};
